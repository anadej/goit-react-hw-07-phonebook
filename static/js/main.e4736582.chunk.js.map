{"version":3,"sources":["redux/contacts/contactsAction.js","components/filter/FilterStyled.js","redux/contacts/contactsSelectors.js","components/filter/Filter.js","components/contactsForm/ContactsFormStyled.js","services/contacts_api.js","components/contactsForm/ContactsForm.js","redux/contacts/contactsOperations.js","components/contactsList/ContactsListStyled.js","components/contactsList/ContactsList.js","components/SectionStyled.js","components/Section.js","components/App.js","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","setFilter","FilterStyled","styled","label","getLoading","state","contacts","isLoading","getFilter","filter","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","contact","name","includes","connect","className","type","value","pattern","title","required","onChange","e","inputFilter","target","ContactsFormStyled","div","baseURL","getContacts","a","axios","get","response","res","Object","keys","data","map","item","id","Error","addContact","post","deleteContact","delete","groupContacts","initialState","number","group","ContactsForm","onHandleChange","setState","onHandleSubmit","preventDefault","props","addContactOperation","this","getContactsOperation","onSubmit","toUpperCase","Component","user","dispatch","getState","message","ContactsListStyled","deleteContactOperation","onClick","SectionStyled","section","Section","children","App","itemsReducer","createReducer","_","payload","action","some","alert","isLoadingReducer","errorReducer","filterReducer","contactsReducer","combineReducers","error","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4736582.chunk.js","sourcesContent":["// ==================== toolkit ==========================\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactsRequest = createAction(\"contacts/getContactsRequest\");\r\nexport const getContactsSuccess = createAction(\"contacts/getContactsSuccess\");\r\nexport const getContactsError = createAction(\"contacts/getContactsError\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  \"contacts/deleteContactsRequest\"\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  \"contacts/deleteContactsSuccess\"\r\n);\r\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nexport const setFilter = createAction(\"contacts/setFilter\");\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n\r\n  .inputFilter {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid lightblue;\r\n    }\r\n  }\r\n`;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => state.contacts.items.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n//мемоизация селектора\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contactsAction\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const onFilterChange = (e) => {\r\n    const inputFilter = e.target.value;\r\n    setFilter(inputFilter);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      Find contacts by name:\r\n      <input\r\n        className=\"inputFilter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Начните вводить имя контакта, который хотите найти\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFilter })(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFormStyled = styled.div`\r\n  border: 2px solid black;\r\n  width: 40%;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n\r\n  .phoneForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .labelForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n  }\r\n  .inputForm {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n  }\r\n  .buttonForm {\r\n    width: 40%;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get(baseURL + \"/contacts.json\");\r\n    const res = Object.keys(response.data).map((item) => ({\r\n      id: item,\r\n      ...response.data[item],\r\n    }));\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addContact = async (contact) => {\r\n  try {\r\n    const response = await axios.post(baseURL + \"/contacts.json\", contact);\r\n    return { ...contact, id: response.data.name };\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteContact = async (id) => {\r\n  try {\r\n    await axios.delete(baseURL + `/contacts/${id}.json`);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import { addContact } from \"../../services/contacts_api\";\r\n// import {\r\n//   addContact as addContactActionCreator,\r\n//   setLoader,\r\n// } from \"../../redux/contacts/contactsAction\";\r\nimport { ContactsFormStyled } from \"./ContactsFormStyled\";\r\nimport {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getLoading } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst groupContacts = [\"all\", \"family\", \"friends\", \"work\"];\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  group: groupContacts[0],\r\n};\r\n\r\nclass ContactsForm extends Component {\r\n  state = { ...initialState };\r\n\r\n  componentDidMount() {\r\n    this.props.getContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.props.addContactOperation({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <ContactsFormStyled>\r\n        {this.props.isLoading && <p>...loading</p>}\r\n        <form className=\"phoneForm\" onSubmit={this.onHandleSubmit}>\r\n          <label className=\"labelForm\">\r\n            Name:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Number:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Group:\r\n            <select\r\n              name=\"group\"\r\n              className=\"inputForm\"\r\n              onChange={this.onHandleChange}\r\n            >\r\n              {groupContacts.map((item) => (\r\n                <option value={item} key={item}>\r\n                  {item.toUpperCase()}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button type=\"submit\" className=\"buttonForm\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactsFormStyled>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n})(ContactsForm);\r\n","import {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n} from \"../../services/contacts_api\";\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from \"./contactsAction\";\r\n\r\nexport const getContactsOperation = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(getContactsRequest());\r\n    const res = await getContacts();\r\n    dispatch(getContactsSuccess(res));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(addContactsRequest());\r\n    //запрос к backend на добавление одного контакта, возвращает id\r\n    const res = await addContact(user);\r\n    //обоновляем state c id контакта, полученного из базы\r\n    dispatch(addContactsSuccess({ ...res }));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(deleteContactsRequest());\r\n    await deleteContact(id);\r\n    dispatch(deleteContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyled = styled.div`\r\n  .contactBtn {\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ContactsListStyled } from \"./ContactsListStyled\";\r\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst ContactsList = ({ contacts, deleteContactOperation }) => {\r\n  return (\r\n    <ContactsListStyled>\r\n      <ul>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              className=\"contactBtn\"\r\n              type=\"button\"\r\n              onClick={() => deleteContactOperation(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </ContactsListStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //в state передаем сразу отфильтрованные массив номеров, по актуальному значению поля filtr\r\n    contacts: getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteContactOperation })(\r\n  ContactsList\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactsForm from \"./contactsForm/ContactsForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\nimport Section from \"./Section\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Phonebook middleware, async Redux version\"}>\r\n          <ContactsForm />\r\n        </Section>\r\n        <Section title={\"Contacts\"}>\r\n          <Filter />\r\n          <ContactsList />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// ==================== toolkit ==========================\r\n\r\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  setFilter,\r\n} from \"./contactsAction\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactsSuccess]: (state, action) => {\r\n    if (\r\n      state.some(\r\n        (item) => item.name.toLowerCase() === action.payload.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(action.payload.name + \" is already in contact list\");\r\n      return state;\r\n    }\r\n    return [...state, action.payload];\r\n  },\r\n\r\n  [deleteContactsSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(\"\", {\r\n  [getContactsRequest]: () => \"\",\r\n  [getContactsError]: (_, { payload }) => payload,\r\n  [addContactsRequest]: () => \"\",\r\n  [addContactsError]: (_, { payload }) => payload,\r\n  [deleteContactsRequest]: () => \"\",\r\n  [deleteContactsError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  // devTools: process.env.NODE_ENV !== \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}