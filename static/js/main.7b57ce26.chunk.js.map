{"version":3,"sources":["redux/contacts/contactsAction.js","components/filter/FilterStyled.js","redux/contacts/contactsSelectors.js","components/filter/Filter.js","components/contactsForm/ContactsFormStyled.js","services/contacts_api.js","components/contactsForm/ContactsForm.js","redux/contacts/contactsOperations.js","components/contactsList/ContactsListStyled.js","components/contactsList/ContactsList.js","components/SectionStyled.js","components/Section.js","components/App.js","redux/contacts/contactsReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","getContacts","setFilter","setLoader","setError","resetError","FilterStyled","styled","label","getLoading","state","contacts","isLoading","getFilter","filter","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","contact","name","includes","connect","className","type","value","pattern","title","required","onChange","e","inputFilter","target","ContactsFormStyled","div","baseURL","a","axios","get","response","res","Object","keys","data","map","item","id","Error","post","delete","groupContacts","initialState","number","group","ContactsForm","onHandleChange","setState","onHandleSubmit","preventDefault","props","addContactOperation","this","getContactsOperation","onSubmit","toUpperCase","Component","user","dispatch","getState","addContactActionCreator","message","getContactsActionCreator","ContactsListStyled","deleteContactOperation","deleteContactActionCreator","onClick","SectionStyled","section","Section","children","App","itemsReducer","createReducer","action","some","payload","alert","_","filterReducer","isLoadingReducer","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b57ce26.chunk.js","sourcesContent":["// ==================== toolkit ==========================\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"contacts/addContact\");\r\nexport const deleteContact = createAction(\"contacts/deleteContact\");\r\nexport const getContacts = createAction(\"contacts/setContacts\");\r\nexport const setFilter = createAction(\"contacts/setFilter\");\r\nexport const setLoader = createAction(\"contacts/setLoader\");\r\nexport const setError = createAction(\"contacts/setError\");\r\nexport const resetError = createAction(\"contacts/resetError\");\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n\r\n  .inputFilter {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid lightblue;\r\n    }\r\n  }\r\n`;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => state.contacts.items.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n//мемоизация селектора\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contactsAction\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  const onFilterChange = (e) => {\r\n    const inputFilter = e.target.value;\r\n    setFilter(inputFilter);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      Find contacts by name:\r\n      <input\r\n        className=\"inputFilter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Начните вводить имя контакта, который хотите найти\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFilter })(Filter);\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFormStyled = styled.div`\r\n  border: 2px solid black;\r\n  width: 40%;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n\r\n  .phoneForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .labelForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 10px;\r\n  }\r\n  .inputForm {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n  }\r\n  .buttonForm {\r\n    width: 40%;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get(baseURL + \"/contacts.json\");\r\n    const res = Object.keys(response.data).map((item) => ({\r\n      id: item,\r\n      ...response.data[item],\r\n    }));\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addContact = async (contact) => {\r\n  try {\r\n    const response = await axios.post(baseURL + \"/contacts.json\", contact);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteContact = async (id) => {\r\n  try {\r\n    await axios.delete(baseURL + `/contacts/${id}.json`);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import { addContact } from \"../../services/contacts_api\";\r\n// import {\r\n//   addContact as addContactActionCreator,\r\n//   setLoader,\r\n// } from \"../../redux/contacts/contactsAction\";\r\nimport { ContactsFormStyled } from \"./ContactsFormStyled\";\r\nimport {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport { getLoading } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst groupContacts = [\"all\", \"family\", \"friends\", \"work\"];\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  group: groupContacts[0],\r\n};\r\n\r\nclass ContactsForm extends Component {\r\n  state = { ...initialState };\r\n\r\n  componentDidMount() {\r\n    this.props.getContactsOperation();\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.props.addContactOperation({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <ContactsFormStyled>\r\n        {this.props.isLoading && <p>...loading</p>}\r\n        <form className=\"phoneForm\" onSubmit={this.onHandleSubmit}>\r\n          <label className=\"labelForm\">\r\n            Name:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Number:\r\n            <input\r\n              className=\"inputForm\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label className=\"labelForm\">\r\n            Group:\r\n            <select\r\n              name=\"group\"\r\n              className=\"inputForm\"\r\n              onChange={this.onHandleChange}\r\n            >\r\n              {groupContacts.map((item) => (\r\n                <option value={item} key={item}>\r\n                  {item.toUpperCase()}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          <button type=\"submit\" className=\"buttonForm\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </ContactsFormStyled>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: getLoading(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n})(ContactsForm);\r\n","import {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n} from \"../../services/contacts_api\";\r\nimport {\r\n  addContact as addContactActionCreator,\r\n  deleteContact as deleteContactActionCreator,\r\n  getContacts as getContactsActionCreator,\r\n  setLoader,\r\n  setError,\r\n} from \"./contactsAction\";\r\n\r\nexport const getContactsOperation = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(setLoader()); //request\r\n    const res = await getContacts();\r\n    dispatch(getContactsActionCreator(res)); //success\r\n  } catch (error) {\r\n    dispatch(setError(error.message)); //error\r\n  } finally {\r\n    dispatch(setLoader());\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(setLoader()); //request\r\n    //запрос к backend на добавление одного контакта, возвращает id\r\n    const res = await addContact(user);\r\n    //обоновляем state c id контакта, полученного из базы\r\n    dispatch(addContactActionCreator({ ...user, id: res.name })); //success\r\n  } catch (error) {\r\n    dispatch(setError(error.message)); //error\r\n  } finally {\r\n    dispatch(setLoader());\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(setLoader()); //request\r\n    await deleteContact(id);\r\n    dispatch(deleteContactActionCreator(id)); //success\r\n  } catch (error) {\r\n    dispatch(setError(error.message)); //error\r\n  } finally {\r\n    dispatch(setLoader());\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyled = styled.div`\r\n  .contactBtn {\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import { deleteContact } from \"../../redux/contacts/contactsAction\";\r\nimport { ContactsListStyled } from \"./ContactsListStyled\";\r\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst ContactsList = ({ contacts, deleteContactOperation }) => {\r\n  return (\r\n    <ContactsListStyled>\r\n      <ul>\r\n        {contacts.map(\r\n          (contact) => (\r\n            <li key={contact.id}>\r\n              {contact.name}: {contact.number}\r\n              <button\r\n                className=\"contactBtn\"\r\n                type=\"button\"\r\n                onClick={() => deleteContactOperation(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          )\r\n          // )\r\n        )}\r\n      </ul>\r\n    </ContactsListStyled>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //в state передаем сразу отфильтрованные массив номеров, по актуальному значению поля filtr\r\n    contacts: getFilteredContacts(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     deleteContact: (id) => {\r\n//       dispatch(deleteContact(id));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(mapStateToProps, { deleteContactOperation })(\r\n  ContactsList\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport Filter from \"./filter/Filter\";\r\nimport ContactsForm from \"./contactsForm/ContactsForm\";\r\nimport ContactsList from \"./contactsList/ContactsList\";\r\nimport Section from \"./Section\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Phonebook middleware, async Redux version\"}>\r\n          <ContactsForm />\r\n        </Section>\r\n        <Section title={\"Contacts\"}>\r\n          <Filter />\r\n          <ContactsList />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// ==================== toolkit ==========================\r\n\r\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n  setFilter,\r\n  setLoader,\r\n  setError,\r\n  resetError,\r\n} from \"./contactsAction\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContact]: (state, action) => {\r\n    if (\r\n      state.some(\r\n        (item) => item.name.toLowerCase() === action.payload.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(action.payload.name + \" is already in contact list\");\r\n      return state;\r\n    }\r\n    return [...state, action.payload];\r\n  },\r\n\r\n  [deleteContact]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n\r\n  [getContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [setLoader]: (state) => !state,\r\n});\r\n\r\nconst errorReducer = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  isLoading: isLoadingReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  // devTools: process.env.NODE_ENV !== \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}